
 		Issam Abdallah, Tunisia.
 		  iabdallah@yandex.com

		** linux-0.00 **

  This is an implementation of linux-0.00, the first linux version developped
  by Linus Torvalds and it was abandoned.

	" it switched between two processes that printed AAAA... and BBBB... respectively 
	  by using the timer-interrupt - God I was proud over that" --- Linus Torvalds

  Two level-3 tasks run in user mode, scheduled by the timer interrupt and use a
  system call to print 'A' and 'B' on the screen. As we don't have a fork and execve system calls
  and even a file system (to load an executable from the disk into the memory and execute it), 
  the two tasks are coded into the kernel's source code!

 - boot.s

    boot.s is a rewriting of the linux-0.01 boot.s, using the 
    GNU assembler syntax with some modifications.

    boot.s is loaded at 0x7c00 by the bios-startup routines, and moves itself
    out of the way to address 0x90000, and jumps there.

    It then loads the system (kernel.s) at 0x10000, using BIOS interrupts. Thereafter
    it disables all interrupts, moves the system down to 0x0000, changes
    to protected mode, and calls the start of system. System then must
    RE-initialize the protected mode in it's own tables, and enable
    interrupts as needed.

 - kernel.s

    kernel.s is a small kernel that run in 32-bit protected mode. 
    It will setup GDT, IDT switch to user mode and schedule two user tasks. 

 - booting the system

  1. make
  2. qemu-system-i386 boot

-----------------------------------------------------------------------

 copyright(C) 2015 Issam Abdallah, Tunisia.
 E-mail: iabdallah@yandex.com

 License: GPL

